//localStorage.clear();
/*
var initial_data;
$.ajax({
	type: "GET",
	url: "/profile/notifications",
	datatype: "json",
	async: false,
	success: function(notfs){
		initial_data = notfs;            
	}
});



var notifications = [];

(function newjobs() {
    var inputjob = $.ajax({
			url: "/profile/notifications/seen"
		});
    inputjob.done(function(data) {
		
		$.each(data, function(key, value){
			
			notifications[key] = value;
			notifications.push;
		});
		
        setTimeout(newjobs, 10000);
    });
    inputjob.fail(function() {
        notifications.push;
		setTimeout(newjobs, 10000);
    });
})();




$(document).ready(function() {

	//localStorage.clear();

    // this is a self-invoked function called initially to render the notification data, checks if any data present in the local storage, otherwise renders the new data from array "initial_data"
    (function() {

        if (localStorage['notification']) {
            var data = JSON.parse(localStorage['notification'])
        } else {
            data = initial_data
        }

        var count = 0

        for (var a = 0; a < data.length; a++) {
            var item = data[a]
            var html = $('<div class="list-item noti">\
                            <div class="text fl"><b class="name fl">' + item['name'] + '</b>' + item['text'] + '</div>\
                        </div>');
            $(html).data('notification', item)
            //            console.log(item['read'])
            if (!item['read']) {
                count = count + 1
            } else {
                $(html).addClass('background-white')
            }
            $(document).find('.notification-dropdown .items').append(html)
        }
        set_notification(count) // sets the notification counter
        save_localdata() // updates local storage

    })();

    // click on notification bell
    $('.notification').click(function() {
        if (!$(document).find('.notification-dropdown').hasClass('dd')) {
            hide_dropdown()
        } else {
            $('.notification-dropdown').removeClass('dd').addClass('dropdown-transition')
            set_notification(0)
            save_localdata()
        }
    })


    // handler to close dropdown on clicking outside of it
    $(document).on('click', function(e) {
        var target = $(e.target)
        if (!target.closest('.notification').length && !target.closest('.dropdown-transition').length) {
            if (!$(document).find('.notification-dropdown').hasClass('dd')) {
                hide_dropdown()
            }
        }
    })

    // function to close dropdown and setting notification count to 0
    function hide_dropdown() {
        $(document).find('.notification-dropdown').removeClass('dropdown-transition').addClass('dd')
        $(document).find('.notification-dropdown').find('.list-item').addClass('background-white')
        set_notification(0)
        save_localdata()
    }


    // timer function toh trigger push notification in every 5 second
    setTimeout(function() {
        var push_notifications = setInterval(function() {
            console.log(notifications);
			if (notifications.length) {
                var item = notifications[0]
                var html = $('<div class="list-item noti">\
                            <div class="text fl"><b class="name fl">' + item['name'] + '</b>' + item['text'] + '</div>\
                        </div>');
                $(html).data('notification', item)
                if (!$(document).find('.notification-dropdown').hasClass('dd')) {
                    $(html).addClass('new-item') // to change background color of new pushed notification when the dropdown is openedx to distinguish the new addition
                }
                $(document).find('.notification-dropdown .items').prepend(html)
                setInterval(function() {
                    $(html).removeClass('new-item') // background color is made normal after 2 seconds
                }, 2000)
                var count = parseInt($(document).find('.notify-count').attr('count')) + 1
				$(document).find('.fa-bell').addClass('active')
                set_notification(count)
                notifications.shift()
                //notifications.push(item)
                save_localdata()
            }
			
        }, 5000)
    }, 5000)


    // function to update local storage
    function save_localdata() {
        var list = []

        $(document).find('.notification-dropdown .items .list-item').each(function(i, e) {
            var data = $(this).data('notification')
            var new_data = {
                text: data['text'],
                name: data['name'],
            }
            if ($(this).hasClass('background-white') || !$(document).find('.notification-dropdown').hasClass('dd')) {
                new_data['read'] = true
            } else {
                new_data['read'] = false
            }
			
            list.push(new_data)
        })
        localStorage.removeItem('notification')
        localStorage.setItem("notification", JSON.stringify(list))

    }


    //function to update notification counter
    function set_notification(count) {
        $(document).find('.notify-count').attr('count', count)
        $(document).find('.notify-count .value').text(count)

        if (count > 0) {
            document.title = '(' + count + ') - Wingify notification center' // adding notification count in window title, incase the user is on some other tab.
        }
    }

})

*/